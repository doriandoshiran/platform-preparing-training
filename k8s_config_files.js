// Kubernetes configuration files
var k8sConfigFiles = {
    '/root/.kube/config': 'apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    server: https://192.168.1.10:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVkt...\n\n# Kubernetes admin configuration\n# This file authenticates kubectl commands\n# HIDDEN_FLAG{KUBECONFIG_MASTER_ACCESS}',

    '/etc/kubernetes/admin.conf': 'apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    server: https://192.168.1.10:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVkt...\n\n# Master admin configuration - identical to ~/.kube/config\n# Used by system components for authentication',

    '/etc/kubernetes/kubelet.conf': 'apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    server: https://192.168.1.10:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: system:node:k8s-master-01\n  name: system:node:k8s-master-01@kubernetes\ncurrent-context: system:node:k8s-master-01@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: system:node:k8s-master-01\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVkt...\n\n# Kubelet configuration for master node\n# Authenticates kubelet to API server',

    '/etc/kubernetes/manifests/kube-apiserver.yaml': 'apiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.1.10:6443\n  creationTimestamp: null\n  labels:\n    component: kube-apiserver\n    tier: control-plane\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-apiserver\n    - --advertise-address=192.168.1.10\n    - --allow-privileged=true\n    - --authorization-mode=Node,RBAC\n    - --client-ca-file=/etc/kubernetes/pki/ca.crt\n    - --enable-admission-plugins=NodeRestriction\n    - --enable-bootstrap-token-auth=true\n    - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt\n    - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt\n    - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key\n    - --etcd-servers=https://127.0.0.1:2379\n    - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt\n    - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key\n    - --secure-port=6443\n    - --service-cluster-ip-range=10.96.0.0/12\n    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt\n    - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key\n    image: k8s.gcr.io/kube-apiserver:v1.24.0\n    name: kube-apiserver\n    resources:\n      requests:\n        cpu: 250m\n  hostNetwork: true\n  priorityClassName: system-node-critical\nstatus: {}\n\n# API Server static pod manifest\n# Core Kubernetes component that serves the API',

    '/etc/kubernetes/manifests/kube-controller-manager.yaml': 'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    component: kube-controller-manager\n    tier: control-plane\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-controller-manager\n    - --bind-address=127.0.0.1\n    - --cluster-name=kubernetes\n    - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt\n    - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key\n    - --kubeconfig=/etc/kubernetes/controller-manager.conf\n    - --leader-elect=true\n    - --service-cluster-ip-range=10.96.0.0/12\n    image: k8s.gcr.io/kube-controller-manager:v1.24.0\n    name: kube-controller-manager\n    resources:\n      requests:\n        cpu: 200m\n  hostNetwork: true\n  priorityClassName: system-node-critical\nstatus: {}\n\n# Controller Manager static pod\n# Manages controllers like ReplicaSets, Deployments',

    '/etc/kubernetes/manifests/kube-scheduler.yaml': 'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    component: kube-scheduler\n    tier: control-plane\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - kube-scheduler\n    - --bind-address=127.0.0.1\n    - --kubeconfig=/etc/kubernetes/scheduler.conf\n    - --leader-elect=true\n    image: k8s.gcr.io/kube-scheduler:v1.24.0\n    name: kube-scheduler\n    resources:\n      requests:\n        cpu: 100m\n  hostNetwork: true\n  priorityClassName: system-node-critical\nstatus: {}\n\n# Scheduler static pod\n# Schedules pods to nodes based on resource requirements',

    '/etc/kubernetes/manifests/etcd.yaml': 'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    component: etcd\n    tier: control-plane\n  name: etcd\n  namespace: kube-system\nspec:\n  containers:\n  - command:\n    - etcd\n    - --advertise-client-urls=https://192.168.1.10:2379\n    - --cert-file=/etc/kubernetes/pki/etcd/server.crt\n    - --client-cert-auth=true\n    - --data-dir=/var/lib/etcd\n    - --key-file=/etc/kubernetes/pki/etcd/server.key\n    - --listen-client-urls=https://127.0.0.1:2379,https://192.168.1.10:2379\n    - --name=k8s-master-01\n    - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt\n    image: k8s.gcr.io/etcd:3.5.3-0\n    name: etcd\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n  hostNetwork: true\n  priorityClassName: system-node-critical\nstatus: {}\n\n# etcd static pod manifest\n# Kubernetes cluster database - stores all cluster state\n# Critical component - handles all persistent storage',

    '/etc/hosts': '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n\n# Kubernetes cluster hosts\n192.168.1.10    k8s-master-01.company.local k8s-master-01\n192.168.1.11    k8s-worker-01.company.local k8s-worker-01\n192.168.1.12    k8s-worker-02.company.local k8s-worker-02\n\n# Infrastructure hosts\n192.168.1.100   platform.company.local\n192.168.1.200   db.company.local\n\n# Production services\n192.168.1.250   monitoring.company.local\n192.168.1.251   logging.company.local\n\n# Don\'t mess with the cluster networking!',

    '/etc/resolv.conf': '# Generated by NetworkManager\nnameserver 8.8.8.8\nnameserver 8.8.4.4\nnameserver 192.168.1.1\nsearch company.local\n\n# DNS configuration for Kubernetes cluster\n# Uses Google DNS as backup for reliability'
};